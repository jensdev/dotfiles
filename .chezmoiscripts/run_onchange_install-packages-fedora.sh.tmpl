#!/bin/bash

printf "%.s=" $(seq 1 $(tput cols))
echo
echo "Installing nerd fonts and symbols:"
echo
for font in NerdFontsSymbolsOnly CascadiaCode CaskaydiaMono CodeNewRoman FiraCode JetBrainsMono Meslo SourceCodePro UbuntuMono VictorMono
do
    if [ ! -d "$HOME/.local/share/fonts/$font" ] ; then
        wget "https://github.com/ryanoasis/nerd-fonts/releases/latest/download/$font.zip" --directory-prefix ~/.local/share/fonts
        unzip ~/.local/share/fonts/$font.zip -d ~/.local/share/fonts/$font/ > /dev/null
        rm ~/.local/share/fonts/$font.zip -f
        rm ~/.local/share/fonts/$font/*Windows* -f
        echo "Installed $font."
        echo
    else
        echo "$font already installed."
        echo
    fi
done


sudo dnf install fedora-workstation-repositories
sudo dnf config-manager setopt google-chrome.enabled=1

sudo dnf -y install dnf-plugins-core
sudo dnf config-manager addrepo --from-repofile=https://download.docker.com/linux/fedora/docker-ce.repo

sudo rpm --import https://packages.microsoft.com/keys/microsoft.asc
echo -e "[code]\nname=Visual Studio Code\nbaseurl=https://packages.microsoft.com/yumrepos/vscode\nenabled=1\nautorefresh=1\ntype=rpm-md\ngpgcheck=1\ngpgkey=https://packages.microsoft.com/keys/microsoft.asc" | sudo tee /etc/yum.repos.d/vscode.repo > /dev/null
dnf check-update


{{ range .fedora.copr -}}
{{   $repo_filename := printf "_copr_%s.repo" (. | replace "/" "-") }}
{{   $repo_path := joinPath "/etc/yum.repos.d" $repo_filename }}
if [ ! -f {{ $repo_path | quote }} ]; then
    sudo dnf copr enable {{ . | quote }} --assumeyes
fi
{{ end -}}


{{ range .fedora.packages -}}
if ! rpm -q {{ . | quote }} >/dev/null 2>&1; then
    sudo dnf install -y {{ . | quote }}
fi
{{ end -}}

sudo systemctl enable --now libvirtd
sudo usermod -aG libvirt $(whoami)
sudo usermod -aG kvm $(whoami)

{{ range .fedora.flathub -}}
if ! flatpak info {{ . | quote }} >/dev/null 2>&1; then
    flatpak install flathub {{ . | quote }} --assumeyes
fi
{{ end -}}

sudo usermod -aG docker $USER
sudo systemctl enable --now docker


ANDROID_STUDIO_URL="https://redirector.gvt1.com/edgedl/android/studio/ide-zips/2025.1.4.8/android-studio-2025.1.4.8-linux.tar.gz"
INSTALL_DIR="/opt/android-studio"
SYMLINK_DIR="/usr/local/bin"
DOWNLOAD_DIR=$(mktemp -d)

# Check if Android Studio is already installed
if [ -d "$INSTALL_DIR" ]; then
  echo "Android Studio is already installed in $INSTALL_DIR. Skipping installation."
else

echo "Downloading Android Studio..."
wget -q --show-progress -O "${DOWNLOAD_DIR}/android-studio.tar.gz" "$ANDROID_STUDIO_URL"

echo "Installing Android Studio to $INSTALL_DIR..."
sudo mkdir -p "$INSTALL_DIR"
sudo tar -xzf "${DOWNLOAD_DIR}/android-studio.tar.gz" -C "$INSTALL_DIR" --strip-components=1

echo "Creating symlink..."
sudo ln  -sf "${INSTALL_DIR}/bin/studio.sh" "${SYMLINK_DIR}/android-studio"

echo "Cleaning up..."
rm -rf "$DOWNLOAD_DIR"

echo "Android Studio installation complete."
fi


printf "%.s=" $(seq 1 $(tput cols))
echo
echo "Setting up ZSH as the default shell:"
chsh $USER -s $(which zsh)


# Install Oh My Zsh
if [ ! -d "$HOME/.oh-my-zsh" ]; then
    log_info "Installing Oh My Zsh..."
    sh -c "$(curl -fsSL https://raw.githubusercontent.com/ohmyzsh/ohmyzsh/master/tools/install.sh)" "" --unattended
    echo "Oh My Zsh installed"
else
    echo "Oh My Zsh already installed"
fi

# Install zsh plugins
log_info "Installing zsh plugins..."
ZSH_CUSTOM="${ZSH_CUSTOM:-$HOME/.oh-my-zsh/custom}"

if [ ! -d "$ZSH_CUSTOM/plugins/zsh-autosuggestions" ]; then
    git clone https://github.com/zsh-users/zsh-autosuggestions "$ZSH_CUSTOM/plugins/zsh-autosuggestions"
    echo "zsh-autosuggestions installed"
else
    echo "zsh-autosuggestions already installed"
fi

if [ ! -d "$ZSH_CUSTOM/plugins/fast-syntax-highlighting" ]; then
    git clone https://github.com/zdharma-continuum/fast-syntax-highlighting.git \
      "$ZSH_CUSTOM/plugins/fast-syntax-highlighting"
    echo "fast-syntax-highlighting installed"
else
    echo "fast-syntax-highlighting already installed"
fi

chsh $USER -s $(which zsh)
sudo lchsh -s $(which zsh)
cp ~/.local/share/dot_zshrc ~/.zshrc